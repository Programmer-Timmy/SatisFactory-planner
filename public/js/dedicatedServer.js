!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.dedicatedServer=t():e.dedicatedServer=t()}(this,(()=>(()=>{"use strict";let e=$('\n  <div class="toast-container position-fixed p-3 bottom-0 end-0" id="toastPlacement" data-original-class="toast-container position-absolute p-3">\n    <div class="toast" id="DedicatedServerStatus" data-bs-autohide="false" style="background-color: rgba(var(--bs-body-bg-rgb),1);">\n      <div class="toast-header">\n        <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"><rect width="100%" height="100%" fill="#007aff"></rect></svg>\n        <strong class="me-auto name">Dedicated Server status</strong>\n        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>\n      </div>\n      <div class="toast-body">\n        Hello, world! This is a toast message.\n      </div>\n    </div>\n  </div>\n');const t=window.bootstrap?.Toast||class{constructor(e){}show(){}hide(){}dispose(){}};return window.DedicatedServer=class{show=!1;toast;toastMessage="";closed=!1;gameSaveId=NaN;fillColor="#57e389";constructor(s){if(this.gameSaveId=s,document.body.appendChild(e[0]),this.toast=new t(document.getElementById("DedicatedServerStatus")),document.cookie.includes("toastClosed=true")?this.closed=!0:this.closed=!1,!this.closed){this.HealthCheck(),this.applyeventListeners();const e=setInterval((()=>{this.closed?clearInterval(e):this.HealthCheck()}),6e4)}}ShowToast(){$("#DedicatedServerStatus .toast-header svg rect").attr("fill",this.fillColor),$("#DedicatedServerStatus .toast-body").html(this.toastMessage),$("#DedicatedServerStatus").hasClass("show")||this.toast.show()}HealthCheck(){this.AjaxHealthCheck().then((e=>{"healthy"===e.data.health&&(this.fillColor="#57e389",this.AjaxQueryServer().then((e=>{let t="";t+='<div class="text-success mb-2 fw-bold">Status: Healthy</div>',t+=`<div><strong>Session Name:</strong> ${e.data.serverGameState.activeSessionName}</div>`,t+=`<div><strong>Game Paused:</strong> ${e.data.serverGameState.isGamePaused?'<span class="text-danger">Yes</span>':'<span class="text-success">No</span>'}</div>`,t+=`<div><strong>Connected Players:</strong> ${e.data.serverGameState.numConnectedPlayers}</div>`,t+=`<div><strong>Total Game Time:</strong> ${e.data.serverGameState.totalGameDuration} minutes</div>`,this.toastMessage=t,this.ShowToast()})).catch((e=>{this.fillColor="#ff6b6b",this.toastMessage='<div class="text-danger fw-bold">The dedicated server is down.</div>',this.ShowToast()})))})).catch((e=>{this.fillColor="#ff6b6b",this.toastMessage='<div class="text-danger fw-bold">The dedicated server is down.</div>',this.ShowToast()}))}AjaxHealthCheck(e=this.gameSaveId){const t=this._getCsrfToken();return new Promise((function(s,a){$.ajax({url:"/dedicatedServerAPI/healthCheck",type:"POST",data:{saveGameId:e},headers:{"X-CSRF-Token":t},dataType:"json",success:function(e){try{"success"===e.status?s(e):a(e)}catch(e){a(e)}},error:function(e,t,s){$("#apiResponse").html(`<div class="alert alert-danger">Error: ${s}</div>`)}})}))}AjaxQueryServer(e=this.gameSaveId){const t=this._getCsrfToken();return new Promise((function(s,a){$.ajax({url:"/dedicatedServerAPI/queryServerState",type:"POST",data:{saveGameId:e},headers:{"X-CSRF-Token":t},dataType:"json",success:function(e){try{"success"===e.status?s(e):a(e)}catch(e){a(e)}},error:function(e,t,s){$("#apiResponse").html(`<div class="alert alert-danger">Error: ${s}</div>`)}})}))}applyeventListeners(){$("#DedicatedServerStatus").on("hidden.bs.toast",(()=>{this.closed=!0,document.cookie="toastClosed=true"}))}_getCsrfToken(){const e=$('meta[name="csrf-token"]');if(0===e.length)throw new Error("CSRF token not found");return e.attr("content")}},{}})()));