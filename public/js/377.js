"use strict";(this.webpackChunk=this.webpackChunk||[]).push([[377],{377:()=>{class e{csrfToken;saveGameId;sessions;sessionSelect;saveSelect;downloadButton;constructor(e,t,s){this.csrfToken=e,this.saveGameId=t,this.sessions=s,this.sessionSelect=document.getElementById("saveGameDownloadSelect"),this.saveSelect=document.getElementById("saveFileDownloadSelect"),this.downloadButton=document.getElementById("downloadSaveLink")}init(){this.sessionSelect&&this.saveSelect&&this.downloadButton&&(this.sessionSelect.addEventListener("change",(()=>this.updateSaveOptions())),this.saveSelect.addEventListener("change",(()=>this.handleSaveSelection())),this.downloadButton.addEventListener("click",(()=>this.downloadSave())),this.sessions.length>0&&this.updateSaveOptions())}updateSaveOptions(){const e=this.sessionSelect.value;this.saveSelect.innerHTML="";const t=this.sessions.find((t=>t.sessionName===e));if(t&&t.saveHeaders.length>0){const e=new Option("Select a save file","",!0,!0);e.disabled=!0,this.saveSelect.appendChild(e),t.saveHeaders.forEach((e=>{const t=new Option(e.saveName,e.saveName);this.saveSelect.appendChild(t)}))}else{const e=new Option("No saves available","",!0,!0);e.disabled=!0,this.saveSelect.appendChild(e)}this.toggleDownloadButton(!1)}handleSaveSelection(){const e=!(!this.sessionSelect.value||!this.saveSelect.value);this.toggleDownloadButton(e)}toggleDownloadButton(e){e?(this.downloadButton.classList.remove("disabled"),this.downloadButton.removeAttribute("aria-disabled")):(this.downloadButton.classList.add("disabled"),this.downloadButton.setAttribute("aria-disabled","true"))}showLoading(e){const t=document.getElementById("downloadSaveModalLoading"),s=document.getElementById("downloadCompleted"),a=t?.previousElementSibling,o=this.downloadButton.querySelector("span");t&&s&&a&&o&&(e?(t.classList.remove("d-none"),s.classList.add("d-none"),a.classList.add("d-none"),o.classList.remove("d-none"),this.toggleDownloadButton(!1)):(t.classList.add("d-none"),s.classList.add("d-none"),a.classList.remove("d-none"),o.classList.add("d-none"),this.toggleDownloadButton(!0)))}showDownloadCompleted(e){const t=document.getElementById("downloadCompleted"),s=document.getElementById("downloadSaveModalLoading"),a=s?.previousElementSibling,o=this.downloadButton.querySelector("span");t&&s&&a&&o&&(e?(t.classList.remove("d-none"),s.classList.add("d-none"),a.classList.add("d-none"),o.classList.add("d-none"),this.toggleDownloadButton(!1)):(t.classList.add("d-none"),s.classList.add("d-none"),a.classList.remove("d-none"),o.classList.add("d-none"),this.toggleDownloadButton(!0)))}resetModal(){this.sessionSelect.selectedIndex=0,this.saveSelect.innerHTML="<option disabled selected>Select a session first</option>",this.toggleDownloadButton(!1)}downloadSave(){this.showLoading(!0),$.ajax({url:"/dedicatedServerAPI/downloadSave",type:"POST",data:{gameSaveId:this.saveGameId,sessionName:$(this.sessionSelect).val(),saveName:$(this.saveSelect).val()},headers:{"X-CSRF-Token":this.csrfToken},xhrFields:{responseType:"blob"},success:e=>{const t=$(this.saveSelect).val(),s=new Blob([e],{type:"application/octet-stream"}),a=window.URL.createObjectURL(s),o=document.createElement("a");o.href=a,o.download=t.endsWith(".sav")?t:`${t}.sav`,document.body.appendChild(o),o.click(),o.remove(),window.URL.revokeObjectURL(a),this.showDownloadCompleted(!0),setTimeout((()=>{this.resetModal(),this.showDownloadCompleted(!1),$("#downloadSaveModal").modal("hide")}),3e3)},error:(e,t,s)=>{alert("Error downloading save: "+(e.responseJSON?.error||s)),this.showLoading(!1)}})}}window.ServerStatusUpdater=class{csrfToken;saveGameId;refreshInterval;saveDownloadHandler;sessions;constructor(e,t,s=6e4,a=[]){this.csrfToken=e,this.saveGameId=t,this.refreshInterval=s,this.sessions=a}init(){document.addEventListener("DOMContentLoaded",(()=>{this.updateLastChecked(),setInterval((()=>this.checkHealth()),this.refreshInterval)})),this.bindStopServerButton(),this.saveDownloadHandler=new e(this.csrfToken,this.saveGameId,this.sessions),this.saveDownloadHandler.init()}updateListItem(e,t){const s=Array.from(document.querySelectorAll("li strong")).find((t=>t.textContent?.includes(e)));s?.parentElement&&(s.parentElement.innerHTML=t)}cleanGamePhase(e){const t=e.match(/GP_([^\.]+)/);return t?t[1].replace(/_/g," "):e}formatHealth(e){return e?'<span class="text-success">Healthy <i class="fa-solid fa-check fa-lg"></i></span>':'<span class="text-danger">Unhealthy <i class="fa-solid fa-xmark fa-lg"></i></span>'}formatRunning(e){return e?'<i class="fa-solid fa-check text-success fa-lg"></i> Yes':'<i class="fa-solid fa-xmark text-danger fa-lg"></i> No'}formatPaused(e){return e?'<i class="fa-solid fa-pause text-danger fa-lg"></i> Yes':'<i class="fa-solid fa-play text-info fa-lg"></i> No'}updateLastChecked(){const e=(new Date).toLocaleTimeString([],{hour12:!1});this.updateListItem("Last Checked:",`<strong>Last Checked:</strong> ${e}`)}checkHealth(){$.ajax({url:"/dedicatedServerAPI/healthCheck",type:"POST",data:{gameSaveId:this.saveGameId},headers:{"X-CSRF-Token":this.csrfToken},success:e=>{"healthy"===e?.data?.health?this.updateServerState():console.warn("Health check failed:",e.message)},error:(e,t,s)=>{console.error("Health check error:",e.responseJSON?.error||s)}})}updateServerState(){$.ajax({url:"/dedicatedServerAPI/queryServerState",type:"POST",data:{gameSaveId:this.saveGameId},headers:{"X-CSRF-Token":this.csrfToken},success:e=>{const t=e?.data?.serverGameState;if(!t)return;const s=document.querySelector(".status-indicator"),a=document.querySelector(".status-indicator .status-blink"),o=document.querySelector("h4.fw-bold");s?.classList.remove("offline"),s?.classList.add("online"),a?.classList.remove("blink-offline"),a?.classList.add("blink-online"),o&&(o.textContent="Server Online"),this.updateListItem("Health:",`<strong>Health:</strong> ${this.formatHealth(!0)}`),this.updateLastChecked(),this.updateListItem("Session:",`<strong>Session:</strong> ${t.activeSessionName}`),this.updateListItem("Players:",`<strong>Players:</strong> ${t.numConnectedPlayers}/${t.playerLimit}`),this.updateListItem("Tech Tier:",`<strong>Tech Tier:</strong> ${t.techTier}`),this.updateListItem("Phase:",`<strong>Phase:</strong> ${this.cleanGamePhase(t.gamePhase)}`),this.updateListItem("Running:",`<strong>Running:</strong> ${this.formatRunning(t.isGameRunning)}`),this.updateListItem("Paused:",`<strong>Paused:</strong> ${this.formatPaused(t.isGamePaused)}`),this.updateListItem("Tick Rate:",`<strong>Tick Rate:</strong> ${t.averageTickRate.toFixed(2)} TPS`),this.updateListItem("Total Duration:",`<strong>Total Duration:</strong> ${t.totalGameDuration}`),this.updateListItem("Auto-load Session:",`<strong>Auto-load Session:</strong> ${t.autoLoadSessionName}`)},error:(e,t,s)=>{console.error("State update error:",e.responseJSON?.error||s)}})}bindStopServerButton(){const e=document.getElementById("confirmStopServerBtn");e&&e.addEventListener("click",(()=>this.stopServer(e)))}stopServer(e){const t=document.getElementById("stopServerAlert"),s=e.parentElement,a=document.getElementById("shutdownConfirmation");t.classList.add("d-none"),t.classList.remove("alert-success","alert-danger"),t.textContent="",e.setAttribute("disabled","true"),e.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Stopping...',$.ajax({url:"/dedicatedServerAPI/shutdown",type:"POST",data:{gameSaveId:this.saveGameId},headers:{"X-CSRF-Token":this.csrfToken},success:()=>{s.classList.add("d-none"),a.classList.remove("d-none"),setTimeout((()=>{$("#stopServerModal").modal("hide"),location.reload()}),3e3)},error:(e,s,a)=>{t.classList.remove("d-none"),t.classList.add("alert-danger"),t.textContent="Error stopping server: "+(e.responseJSON?.error||a)},complete:()=>{e.removeAttribute("disabled"),e.innerHTML="Yes, Stop Server"}})}}}}]);